// Auto-generated by `emit-jsfl.ts`: do not edit this file directly
var data = {
  "\"branches/conditional-expr/src/main.as\"": "file:///branches/conditional-expr/main.swf",
  "\"branches/conditional-if/src/main.as\"": "file:///branches/conditional-if/main.swf",
  "\"branches/conditional-if-else/src/main.as\"": "file:///branches/conditional-if-else/main.swf",
  "\"branches/conditional-if-else-chain/src/main.as\"": "file:///branches/conditional-if-else-chain/main.swf",
  "\"branches/conditional-if-else-if/src/main.as\"": "file:///branches/conditional-if-else-if/main.swf",
  "\"branches/conditional-if-else-if-else/src/main.as\"": "file:///branches/conditional-if-else-if-else/main.swf",
  "\"branches/conditional-nested-expr/src/main.as\"": "file:///branches/conditional-nested-expr/main.swf",
  "\"branches/conditional-nested-if/src/main.as\"": "file:///branches/conditional-nested-if/main.swf",
  "\"branches/conditional-nested-if-else/src/main.as\"": "file:///branches/conditional-nested-if-else/main.swf",
  "\"branches/conditional-nested-if-else-4/src/main.as\"": "file:///branches/conditional-nested-if-else-4/main.swf",
  "\"branches/conditional-nested-if-else-chain/src/main.as\"": "file:///branches/conditional-nested-if-else-chain/main.swf",
  "\"branches/logical-and/src/main.as\"": "file:///branches/logical-and/main.swf",
  "\"branches/logical-or/src/main.as\"": "file:///branches/logical-or/main.swf",
  "\"branches/loop-desugared-continue/src/main.as\"": "file:///branches/loop-desugared-continue/main.swf",
  "\"branches/loop-do-while/src/main.as\"": "file:///branches/loop-do-while/main.swf",
  "\"branches/loop-do-while-true-break/src/main.as\"": "file:///branches/loop-do-while-true-break/main.swf",
  "\"branches/loop-for/src/main.as\"": "file:///branches/loop-for/main.swf",
  "\"branches/loop-for-continue/src/main.as\"": "file:///branches/loop-for-continue/main.swf",
  "\"branches/loop-for-in/src/main.as\"": "file:///branches/loop-for-in/main.swf",
  "\"branches/loop-for-in-break/src/main.as\"": "file:///branches/loop-for-in-break/main.swf",
  "\"branches/loop-for-in-var/src/main.as\"": "file:///branches/loop-for-in-var/main.swf",
  "\"branches/loop-for-inf-break/src/main.as\"": "file:///branches/loop-for-inf-break/main.swf",
  "\"branches/loop-while/src/main.as\"": "file:///branches/loop-while/main.swf",
  "\"branches/loop-while-and-if-else/src/main.as\"": "file:///branches/loop-while-and-if-else/main.swf",
  "\"branches/loop-while-cond-break/src/main.as\"": "file:///branches/loop-while-cond-break/main.swf",
  "\"branches/loop-while-true-break/src/main.as\"": "file:///branches/loop-while-true-break/main.swf",
  "\"branches/loop-with-tests-and-property-accesses/src/main.as\"": "file:///branches/loop-with-tests-and-property-accesses/main.swf",
  "\"branches/shared-jump-target/src/main.as\"": "file:///branches/shared-jump-target/main.swf",
  "\"branches/switch-default/src/main.as\"": "file:///branches/switch-default/main.swf",
  "\"branches/switch-fall-trough/src/main.as\"": "file:///branches/switch-fall-trough/main.swf",
  "\"branches/switch-no-break/src/main.as\"": "file:///branches/switch-no-break/main.swf",
  "\"branches/switch-no-default/src/main.as\"": "file:///branches/switch-no-default/main.swf",
  "\"branches/switch-on-non-literals/src/main.as\"": "file:///branches/switch-on-non-literals/main.swf",
  "\"branches/try-catch-finally-ok/src/main.as\"": "file:///branches/try-catch-finally-ok/main.swf",
  "\"branches/try-catch-ok/src/main.as\"": "file:///branches/try-catch-ok/main.swf",
  "\"functions/joined-object/src/main.as\"": "file:///functions/joined-object/main.swf",
  "\"if/if-else-false/src/main.as\"": "file:///if/if-else-false/main.swf",
  "\"if/if-else-true/src/main.as\"": "file:///if/if-else-true/main.swf",
  "\"if/if-false/src/main.as\"": "file:///if/if-false/main.swf",
  "\"if/if-true/src/main.as\"": "file:///if/if-true/main.swf",
  "\"member/boolean-method/src/main.as\"": "file:///member/boolean-method/main.swf",
  "\"member/direct-boolean-property/src/main.as\"": "file:///member/direct-boolean-property/main.swf",
  "\"member/indirect-boolean-property/src/main.as\"": "file:///member/indirect-boolean-property/main.swf",
  "\"member/null-property/src/main.as\"": "file:///member/null-property/main.swf",
  "\"member/null-prototype/src/main.as\"": "file:///member/null-prototype/main.swf",
  "\"member/object-null-method/src/main.as\"": "file:///member/object-null-method/main.swf",
  "\"member/object-undefined-method/src/main.as\"": "file:///member/object-undefined-method/main.swf",
  "\"member/undefined-property/src/main.as\"": "file:///member/undefined-property/main.swf",
  "\"member/undefined-prototype/src/main.as\"": "file:///member/undefined-prototype/main.swf",
  "\"objects/array-of-constructors/src/main.as\"": "file:///objects/array-of-constructors/main.swf",
  "\"objects/new-empty/src/main.as\"": "file:///objects/new-empty/main.swf",
  "\"objects/new-simple/src/main.as\"": "file:///objects/new-simple/main.swf",
  "\"samples/binary-operators/src/main.as\"": "file:///samples/binary-operators/main.swf",
  "\"samples/conditional-statements/src/main.as\"": "file:///samples/conditional-statements/main.swf",
  "\"samples/delta-of-dir/src/main.as\"": "file:///samples/delta-of-dir/main.swf",
  "\"samples/hello-world/src/main.as\"": "file:///samples/hello-world/main.swf",
  "\"samples/hoisted-fn/src/main.as\"": "file:///samples/hoisted-fn/main.swf",
  "\"samples/loop-statement/src/main.as\"": "file:///samples/loop-statement/main.swf",
  "\"samples/loops-and-updates/src/main.as\"": "file:///samples/loops-and-updates/main.swf",
  "\"samples/member-access/src/main.as\"": "file:///samples/member-access/main.swf",
  "\"samples/object-access/src/main.as\"": "file:///samples/object-access/main.swf",
  "\"samples/one-add-one/src/main.as\"": "file:///samples/one-add-one/main.swf",
  "\"samples/parse-data-string/src/main.as\"": "file:///samples/parse-data-string/main.swf",
  "\"samples/properties/src/main.as\"": "file:///samples/properties/main.swf",
  "\"samples/root-assignments/src/main.as\"": "file:///samples/root-assignments/main.swf",
  "\"samples/root-assignments-next-frame/src/main.as\"": "file:///samples/root-assignments-next-frame/main.swf",
  "\"samples/trace-call/src/main.as\"": "file:///samples/trace-call/main.swf",
  "\"samples/try-statements/src/main.as\"": "file:///samples/try-statements/main.swf",
  "\"samples/update-expressions/src/main.as\"": "file:///samples/update-expressions/main.swf",
  "\"scopes/root-mc-properties/src/main.as\"": "file:///scopes/root-mc-properties/main.swf",
  "\"scopes/root-simple-assignment/src/main.as\"": "file:///scopes/root-simple-assignment/main.swf",
  "\"scopes/root-undeclared-variable-use/src/main.as\"": "file:///scopes/root-undeclared-variable-use/main.swf",
  "\"scopes/root-var-declaration/src/main.as\"": "file:///scopes/root-var-declaration/main.swf",
  "\"try/try-catch-err/src/main.as\"": "file:///try/try-catch-err/main.swf",
  "\"try/try-catch-finally-err/src/main.as\"": "file:///try/try-catch-finally-err/main.swf",
  "\"try/try-catch-finally-ok/src/main.as\"": "file:///try/try-catch-finally-ok/main.swf",
  "\"try/try-catch-ok/src/main.as\"": "file:///try/try-catch-ok/main.swf",
  "\"try/try-finally-err/src/main.as\"": "file:///try/try-finally-err/main.swf",
  "\"try/try-finally-ok/src/main.as\"": "file:///try/try-finally-ok/main.swf",
  "\"try/try-return-finally-ok/src/main.as\"": "file:///try/try-return-finally-ok/main.swf",
  "\"try/try-throw-catch-finally-err/src/main.as\"": "file:///try/try-throw-catch-finally-err/main.swf",
  "\"try/try-throw-finally-err/src/main.as\"": "file:///try/try-throw-finally-err/main.swf",
  "\"with/with-shadow/src/main.as\"": "file:///with/with-shadow/main.swf"
};

// https://github.com/haysclark/flashcommand/blob/master/osx/src/flashcommand
var sourceFile = "file:///.tools/template/template.xfl";
var doc = fl.openDocument(sourceFile);

for (var quotedScriptPath in data) {
  doc.getTimeline().layers[0].frames[0].actionScript = "#include " + quotedScriptPath + "\n";
  doc.exportSWF(data[quotedScriptPath], true);
}

fl.getDocumentDOM().close(false);
fl.quit(false);
